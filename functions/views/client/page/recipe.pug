mixin recipeTemplate(isAmp=false)
  .container.pb40
    .card.card-border.recipe-wrapper
      img.img.img-recipe.recipe-cover(src= recipe.imgCover, alt= recipe.name)
      .recipe-content.content
        .flex
          h1.heading.heading-page= recipe.name
          +ratingTemplate(recipe.ratings)

        //- Summary
        .recipe-summary.card.card-border
          each timeItem in ['prep', 'cook', 'additional', 'total']
            .recipe-summary-item.flex
              svg.icon(fill="currentColor", width="20", height="20")
                use(xlink:href="#icon-mark")
              span.ml10.text-capitalize #{timeItem}:
              span.ml10= recipe.time[timeItem] || '0 min'
          p.recipe-summary-item.flex
            svg.icon(fill="currentColor", width="20", height="20")
              use(xlink:href="#icon-mark")
            span.ml10.text-capitalize Servings:
            span.ml10= recipe.serving

        //- Information
        .recipe-info.flex.flex-between.recipe-section(data-target="information")
          .flex
            h2.heading.heading-section Dish Information
            svg.ml10(fill="currentColor", width="50", height="40")
              use(xlink:href="#icon-dish-info")
          svg.recipe-section-icon(fill="currentColor", width="32", height="32")
            use(xlink:href="#icon-arrow")
        #information.recipe-info.recipe-section-content
          p= recipe.description

        //- Ingredients
        .flex.flex-between.recipe-section(data-target="ingredient")
          .flex
            h2.heading.heading-section Ingredients
            svg.ml10(fill="currentColor", width="40", height="40")
              use(xlink:href="#icon-ingredient")
          svg.recipe-section-icon(fill="currentColor", width="32", height="32")
            use(xlink:href="#icon-arrow")
        #ingredient.recipe-section-content
          each ingredient, idx in (recipe.ingredients || [])
            .recipe-item
              .recipe-checkbox
              p.recipe-label.flex
                -if (ingredient.quantity)
                  span.qty= ingredient.quantity
                -if (ingredient.quantityExtra)
                  span.qtyExtra= ingredient.quantityExtra
                -if (ingredient.unit)
                  span.unit= ingredient.unit
                -if (ingredient.ingredient)
                  span.ingredient= ingredient.ingredient
                -if (ingredient.note)
                  |(#{ingredient.note})

        //- Directions
        .flex.flex-between.recipe-section(data-target="direction")
          .flex
            h2.heading.heading-section Directions
            svg.ml10(fill="currentColor", width="40", height="40")
              use(xlink:href="#icon-cooking")
          svg.recipe-section-icon(fill="currentColor", width="32", height="32")
            use(xlink:href="#icon-arrow")
        #direction.recipe-section-content
          each direction, idx in (recipe.directions || [])
            .recipe-item
              .recipe-checkbox.flex.flex-center
                span= idx+1
              p.recipe-label= direction.desc
